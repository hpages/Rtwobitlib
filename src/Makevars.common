KENT_SOURCE_DIR=kent

INCLUDE_DIR=${R_PACKAGE_DIR}/include
USRLIB_DIR=${R_PACKAGE_DIR}/usrlib${R_ARCH}

## Preprocessor and linker options. Make sure the Rtwobitlib::pkgconfig()
## function (defined in R/zzz.R) produces the same PKG_CPPFLAGS and PKG_LIBS
## values.
PKG_CPPFLAGS=-D_FILE_OFFSET_BITS=64 -I"${INCLUDE_DIR}"
PKG_LIBS="${USRLIB_DIR}/libtwobit.a"

PKG_OBJECTS=R_init_Rtwobitlib.o Rtwobitlib_utils.o twobit_roundtrip.o twobit_seqstats.o

.PHONY : all kent mk-include-dir mk-usrlib-dir populate-include-dir populate-usrlib-dir clean

all : Rtwobitlib.so

Rtwobitlib.so : $(PKG_OBJECTS) populate-usrlib-dir

$(PKG_OBJECTS) : populate-include-dir

kent :
	cd "${KENT_SOURCE_DIR}" && $(MAKE) -f "${KENT_MAKEFILE}"

mk-include-dir :
	mkdir -p "${INCLUDE_DIR}/kent"

mk-usrlib-dir :
	mkdir -p "${USRLIB_DIR}"

populate-include-dir : kent mk-include-dir
	cd "${KENT_SOURCE_DIR}" && cp *.h "${INCLUDE_DIR}/kent"

clean :
	rm -f Rtwobitlib.so $(PKG_OBJECTS) && cd "${KENT_SOURCE_DIR}" && $(MAKE) -f "${KENT_MAKEFILE}" clean
